module comparator_5bit_gate_level (
    input [4:0] A,  // 5-bit input A
    input [4:0] B,  // 5-bit input B
    output [4:0] greater  // 5-bit output, which is the greater of A and B
);

    wire [4:0] gt, eq, lt;
    wire a_bigger, equal;

    // Generate comparison for each bit
    genvar i;
    generate
        for (i = 0; i < 5; i = i + 1) begin : compare_bits
            // Compare A[i] and B[i] bit by bit
            and(gt[i], A[i], ~B[i]);  // A[i] > B[i]
            and(lt[i], ~A[i], B[i]);  // A[i] < B[i]
            and(eq[i], A[i], B[i]);   // A[i] == B[i]
        end
    endgenerate

    // Logic to output the greater of A and B
    // If A > B, output A; else output B
    assign a_bigger = (gt[4] | (eq[4] & gt[3]) | (eq[4] & eq[3] & gt[2]) |
                       (eq[4] & eq[3] & eq[2] & gt[1]) | (eq[4] & eq[3] & eq[2] & eq[1] & gt[0]));

    assign equal = (eq[4] & eq[3] & eq[2] & eq[1] & eq[0]);

    // Output the greater value
    assign greater = a_bigger ? A : B;

endmodule
